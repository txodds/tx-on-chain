{
  "address": "6pW64gN1s2uqjHkn1unFeEjAwJkPGHoppGvS715wyP2J",
  "metadata": {
    "name": "txoracle",
    "version": "1.1.0",
    "spec": "0.1.0",
    "description": "TxODDS Data Channels"
  },
  "instructions": [
    {
      "name": "create_trade",
      "docs": [
        "Create a trade escrow after an off-chain match.",
        "Requires signatures from both traders and a fee payer.",
        "Locks both traders' funds in a new program-controlled vault."
      ],
      "discriminator": [
        183,
        82,
        24,
        245,
        248,
        30,
        204,
        246
      ],
      "accounts": [
        {
          "name": "authority",
          "writable": true,
          "signer": true
        },
        {
          "name": "trader_a",
          "writable": true,
          "signer": true
        },
        {
          "name": "trader_b",
          "writable": true,
          "signer": true
        },
        {
          "name": "trader_a_token_account",
          "writable": true
        },
        {
          "name": "trader_b_token_account",
          "writable": true
        },
        {
          "name": "trade_escrow",
          "writable": true
        },
        {
          "name": "escrow_vault",
          "writable": true
        },
        {
          "name": "stake_token_mint"
        },
        {
          "name": "token_program"
        },
        {
          "name": "system_program"
        }
      ],
      "args": [
        {
          "name": "trade_id",
          "type": "u64"
        },
        {
          "name": "stake_a",
          "type": "u64"
        },
        {
          "name": "stake_b",
          "type": "u64"
        },
        {
          "name": "trade_terms_hash",
          "type": {
            "array": [
              "u8",
              32
            ]
          }
        }
      ]
    },
    {
      "name": "initialize",
      "discriminator": [
        175,
        175,
        109,
        31,
        13,
        152,
        155,
        237
      ],
      "accounts": [
        {
          "name": "oracle_state",
          "writable": true
        },
        {
          "name": "authority",
          "writable": true,
          "signer": true
        },
        {
          "name": "token_mint"
        },
        {
          "name": "system_program"
        }
      ],
      "args": []
    },
    {
      "name": "initialize_sol_treasury",
      "docs": [
        "Initialize the program's SOL treasury PDA.",
        "This is a one-time setup instruction that creates the PDA",
        "for holding the SOL revenue from token sales."
      ],
      "discriminator": [
        195,
        26,
        174,
        10,
        130,
        208,
        16,
        131
      ],
      "accounts": [
        {
          "name": "authority",
          "writable": true,
          "signer": true
        },
        {
          "name": "sol_treasury_pda",
          "docs": [
            "The constraints below ensure it is created correctly."
          ],
          "writable": true
        },
        {
          "name": "system_program"
        }
      ],
      "args": []
    },
    {
      "name": "initialize_treasury",
      "docs": [
        "Initialize the program's treasury vault.",
        "This is a one-time setup instruction that creates the PDA",
        "for holding the subscription tokens that will be sold to users."
      ],
      "discriminator": [
        124,
        186,
        211,
        195,
        85,
        165,
        129,
        166
      ],
      "accounts": [
        {
          "name": "authority",
          "writable": true,
          "signer": true
        },
        {
          "name": "token_treasury_vault",
          "writable": true
        },
        {
          "name": "subscription_token_mint"
        },
        {
          "name": "system_program"
        },
        {
          "name": "token_program"
        },
        {
          "name": "rent"
        }
      ],
      "args": []
    },
    {
      "name": "insert_batch_root",
      "docs": [
        "Lazily initializes a daily odds account and/or updates a root in a 5-minute slot."
      ],
      "discriminator": [
        243,
        170,
        208,
        158,
        207,
        29,
        237,
        93
      ],
      "accounts": [
        {
          "name": "oracle_state"
        },
        {
          "name": "authority",
          "writable": true,
          "signer": true
        },
        {
          "name": "daily_batch_roots",
          "docs": [
            "The address is constrained by the seeds, and we verify the",
            "discriminator and owner inside the instruction."
          ],
          "writable": true
        },
        {
          "name": "system_program"
        }
      ],
      "args": [
        {
          "name": "epoch_day",
          "type": "u16"
        },
        {
          "name": "hour_of_day",
          "type": "u8"
        },
        {
          "name": "minute_of_hour",
          "type": "u8"
        },
        {
          "name": "root",
          "type": {
            "array": [
              "u8",
              32
            ]
          }
        }
      ]
    },
    {
      "name": "insert_fixtures_root",
      "docs": [
        "Lazily initialize a ten-daily fixtures account and/or updates a root in an one-hour slot."
      ],
      "discriminator": [
        18,
        70,
        8,
        160,
        75,
        200,
        109,
        235
      ],
      "accounts": [
        {
          "name": "oracle_state"
        },
        {
          "name": "authority",
          "writable": true,
          "signer": true
        },
        {
          "name": "ten_daily_fixtures_roots",
          "docs": [
            "The address is constrained by the seeds, and we verify the",
            "discriminator and owner inside the instruction."
          ],
          "writable": true
        },
        {
          "name": "system_program"
        }
      ],
      "args": [
        {
          "name": "epoch_day",
          "type": "u16"
        },
        {
          "name": "index",
          "type": "u64"
        },
        {
          "name": "root",
          "type": {
            "array": [
              "u8",
              32
            ]
          }
        }
      ]
    },
    {
      "name": "insert_scores_root",
      "docs": [
        "Lazily initializes a daily scores account and/or updates a root in a 5-minute slot."
      ],
      "discriminator": [
        137,
        39,
        242,
        97,
        131,
        204,
        100,
        133
      ],
      "accounts": [
        {
          "name": "oracle_state"
        },
        {
          "name": "authority",
          "writable": true,
          "signer": true
        },
        {
          "name": "daily_scores_roots",
          "docs": [
            "The address is constrained by the seeds, and we verify the",
            "discriminator and owner inside the instruction."
          ],
          "writable": true
        },
        {
          "name": "system_program"
        }
      ],
      "args": [
        {
          "name": "epoch_day",
          "type": "u16"
        },
        {
          "name": "hour_of_day",
          "type": "u8"
        },
        {
          "name": "minute_of_hour",
          "type": "u8"
        },
        {
          "name": "root",
          "type": {
            "array": [
              "u8",
              32
            ]
          }
        }
      ]
    },
    {
      "name": "purchase_subscription_token",
      "docs": [
        "Allow a user to purchase subscription tokens at a fixed SOL price."
      ],
      "discriminator": [
        252,
        83,
        71,
        248,
        182,
        62,
        155,
        187
      ],
      "accounts": [
        {
          "name": "buyer",
          "writable": true,
          "signer": true
        },
        {
          "name": "sol_treasury",
          "writable": true
        },
        {
          "name": "token_treasury_vault",
          "writable": true
        },
        {
          "name": "buyer_token_account",
          "writable": true
        },
        {
          "name": "subscription_token_mint"
        },
        {
          "name": "system_program"
        },
        {
          "name": "token_program"
        },
        {
          "name": "associated_token_program"
        }
      ],
      "args": [
        {
          "name": "amount_of_sol",
          "type": "u64"
        }
      ]
    },
    {
      "name": "sell_subscription_token",
      "docs": [
        "Allow a user to sell subscription tokens back to the program for SOL."
      ],
      "discriminator": [
        136,
        228,
        119,
        93,
        142,
        40,
        123,
        94
      ],
      "accounts": [
        {
          "name": "seller",
          "writable": true,
          "signer": true
        },
        {
          "name": "sol_treasury_pda",
          "writable": true
        },
        {
          "name": "token_treasury_vault",
          "writable": true
        },
        {
          "name": "seller_token_account",
          "writable": true
        },
        {
          "name": "subscription_token_mint"
        },
        {
          "name": "system_program"
        },
        {
          "name": "token_program"
        }
      ],
      "args": [
        {
          "name": "amount_of_tokens",
          "type": "u64"
        }
      ]
    },
    {
      "name": "settle_trade",
      "discriminator": [
        252,
        176,
        98,
        248,
        73,
        123,
        8,
        157
      ],
      "accounts": [
        {
          "name": "winner",
          "writable": true,
          "signer": true
        },
        {
          "name": "daily_scores_merkle_roots"
        },
        {
          "name": "trade_escrow",
          "writable": true
        },
        {
          "name": "escrow_vault",
          "writable": true
        },
        {
          "name": "winner_token_account",
          "writable": true
        },
        {
          "name": "token_program"
        }
      ],
      "args": [
        {
          "name": "trade_id",
          "type": "u64"
        },
        {
          "name": "ts",
          "type": "i64"
        },
        {
          "name": "fixture_summary",
          "type": {
            "defined": {
              "name": "ScoresBatchSummary"
            }
          }
        },
        {
          "name": "fixture_proof",
          "type": {
            "vec": {
              "defined": {
                "name": "ProofNode"
              }
            }
          }
        },
        {
          "name": "main_tree_proof",
          "type": {
            "vec": {
              "defined": {
                "name": "ProofNode"
              }
            }
          }
        },
        {
          "name": "predicate",
          "type": {
            "defined": {
              "name": "TraderPredicate"
            }
          }
        },
        {
          "name": "stat_a",
          "type": {
            "defined": {
              "name": "StatTerm"
            }
          }
        },
        {
          "name": "stat_b",
          "type": {
            "option": {
              "defined": {
                "name": "StatTerm"
              }
            }
          }
        },
        {
          "name": "op",
          "type": {
            "option": {
              "defined": {
                "name": "BinaryExpression"
              }
            }
          }
        }
      ]
    },
    {
      "name": "stake",
      "docs": [
        "Create a stake account and deposit the required tokens.",
        "This locks the user's custom tokens in an account owned by the program."
      ],
      "discriminator": [
        206,
        176,
        202,
        18,
        200,
        209,
        179,
        108
      ],
      "accounts": [
        {
          "name": "user",
          "writable": true,
          "signer": true
        },
        {
          "name": "oracle_state"
        },
        {
          "name": "stake_account",
          "writable": true
        },
        {
          "name": "stake_vault",
          "writable": true
        },
        {
          "name": "user_token_account",
          "writable": true
        },
        {
          "name": "token_mint"
        },
        {
          "name": "token_program"
        },
        {
          "name": "system_program"
        }
      ],
      "args": []
    },
    {
      "name": "subscribe",
      "docs": [
        "Subscribe to the service by paying in SOL.",
        "This verifies the user's stake and locks it for the subscription duration."
      ],
      "discriminator": [
        254,
        28,
        191,
        138,
        156,
        179,
        183,
        53
      ],
      "accounts": [
        {
          "name": "user",
          "writable": true,
          "signer": true
        },
        {
          "name": "oracle_state"
        },
        {
          "name": "recipient",
          "writable": true
        },
        {
          "name": "stake_account",
          "writable": true
        },
        {
          "name": "stake_vault"
        },
        {
          "name": "system_program"
        }
      ],
      "args": [
        {
          "name": "encrypted_payload",
          "type": "bytes"
        }
      ]
    },
    {
      "name": "unstake",
      "docs": [
        "Withdraw staked tokens after the lock-up period has expired."
      ],
      "discriminator": [
        90,
        95,
        107,
        42,
        205,
        124,
        50,
        225
      ],
      "accounts": [
        {
          "name": "user",
          "writable": true,
          "signer": true
        },
        {
          "name": "stake_account",
          "writable": true
        },
        {
          "name": "stake_vault",
          "writable": true
        },
        {
          "name": "user_token_account",
          "writable": true
        },
        {
          "name": "token_program"
        }
      ],
      "args": []
    },
    {
      "name": "validate_fixture",
      "discriminator": [
        231,
        129,
        218,
        86,
        223,
        114,
        21,
        126
      ],
      "accounts": [
        {
          "name": "ten_daily_fixtures_roots",
          "docs": [
            "The address is constrained by seeds, ensuring we load the correct PDA."
          ]
        }
      ],
      "args": [
        {
          "name": "snapshot",
          "type": {
            "defined": {
              "name": "Fixture"
            }
          }
        },
        {
          "name": "summary",
          "type": {
            "defined": {
              "name": "FixtureBatchSummary"
            }
          }
        },
        {
          "name": "sub_tree_proof",
          "type": {
            "vec": {
              "defined": {
                "name": "ProofNode"
              }
            }
          }
        },
        {
          "name": "main_tree_proof",
          "type": {
            "vec": {
              "defined": {
                "name": "ProofNode"
              }
            }
          }
        }
      ]
    },
    {
      "name": "validate_fixture_batch",
      "docs": [
        "Verify that a given BatchMetadata object is a valid leaf in the",
        "main fixture Merkle tree for a specific hourly batch using the v2 account structure."
      ],
      "discriminator": [
        85,
        223,
        204,
        7,
        4,
        87,
        157,
        1
      ],
      "accounts": [
        {
          "name": "ten_daily_fixtures_roots",
          "docs": [
            "The address is constrained by seeds, ensuring we load the correct PDA."
          ]
        }
      ],
      "args": [
        {
          "name": "index",
          "type": "u8"
        },
        {
          "name": "metadata",
          "type": {
            "defined": {
              "name": "BatchMetadata"
            }
          }
        },
        {
          "name": "proof",
          "type": {
            "vec": {
              "defined": {
                "name": "ProofNode"
              }
            }
          }
        }
      ]
    },
    {
      "name": "validate_odds",
      "docs": [
        "Validates an odds snapshot against the on-chain Merkle root for its",
        "corresponding 5-minute interval."
      ],
      "discriminator": [
        192,
        19,
        91,
        138,
        104,
        100,
        212,
        86
      ],
      "accounts": [
        {
          "name": "daily_odds_merkle_roots"
        }
      ],
      "args": [
        {
          "name": "ts",
          "type": "i64"
        },
        {
          "name": "odds_snapshot",
          "type": {
            "defined": {
              "name": "Odds"
            }
          }
        },
        {
          "name": "summary",
          "type": {
            "defined": {
              "name": "OddsBatchSummary"
            }
          }
        },
        {
          "name": "sub_tree_proof",
          "type": {
            "vec": {
              "defined": {
                "name": "ProofNode"
              }
            }
          }
        },
        {
          "name": "main_tree_proof",
          "type": {
            "vec": {
              "defined": {
                "name": "ProofNode"
              }
            }
          }
        }
      ]
    },
    {
      "name": "validate_stat",
      "discriminator": [
        107,
        197,
        232,
        90,
        191,
        136,
        105,
        185
      ],
      "accounts": [
        {
          "name": "daily_scores_merkle_roots"
        }
      ],
      "args": [
        {
          "name": "ts",
          "type": "i64"
        },
        {
          "name": "fixture_summary",
          "type": {
            "defined": {
              "name": "ScoresBatchSummary"
            }
          }
        },
        {
          "name": "fixture_proof",
          "type": {
            "vec": {
              "defined": {
                "name": "ProofNode"
              }
            }
          }
        },
        {
          "name": "main_tree_proof",
          "type": {
            "vec": {
              "defined": {
                "name": "ProofNode"
              }
            }
          }
        },
        {
          "name": "predicate",
          "type": {
            "defined": {
              "name": "TraderPredicate"
            }
          }
        },
        {
          "name": "stat_a",
          "type": {
            "defined": {
              "name": "StatTerm"
            }
          }
        },
        {
          "name": "stat_b",
          "type": {
            "option": {
              "defined": {
                "name": "StatTerm"
              }
            }
          }
        },
        {
          "name": "op",
          "type": {
            "option": {
              "defined": {
                "name": "BinaryExpression"
              }
            }
          }
        }
      ]
    }
  ],
  "accounts": [
    {
      "name": "OracleState",
      "discriminator": [
        97,
        156,
        157,
        189,
        194,
        73,
        8,
        15
      ]
    },
    {
      "name": "StakeAccount",
      "discriminator": [
        80,
        158,
        67,
        124,
        50,
        189,
        192,
        255
      ]
    },
    {
      "name": "TradeEscrow",
      "discriminator": [
        251,
        124,
        237,
        23,
        18,
        126,
        198,
        49
      ]
    }
  ],
  "errors": [
    {
      "code": 6000,
      "name": "EventNotActive",
      "msg": "Event is not active"
    },
    {
      "code": 6001,
      "name": "PricesMismatch",
      "msg": "Prices and price names arrays must be the same length"
    },
    {
      "code": 6002,
      "name": "InvalidOddsUpdate",
      "msg": "Invalid odds update for this event"
    },
    {
      "code": 6003,
      "name": "InvalidSubTreeProof",
      "msg": "Invalid sub-tree proof. The snapshot does not belong to the summary."
    },
    {
      "code": 6004,
      "name": "InvalidMainTreeProof",
      "msg": "Invalid main tree proof. The summary does not belong to the on-chain root."
    },
    {
      "code": 6005,
      "name": "TimeSlotMismatch",
      "msg": "Time slot mismatch between snapshot and on-chain root account."
    },
    {
      "code": 6006,
      "name": "InvalidTime",
      "msg": "The provided hour or minute is out of the valid range."
    },
    {
      "code": 6007,
      "name": "RootNotAvailable",
      "msg": "Merkle root for this time slot has not been posted by the oracle."
    },
    {
      "code": 6008,
      "name": "AccountDiscriminatorMismatch",
      "msg": "Mismatched account discriminator."
    },
    {
      "code": 6009,
      "name": "InvalidPda",
      "msg": "The provided daily root account does not match the expected PDA."
    },
    {
      "code": 6010,
      "name": "TimestampMismatch",
      "msg": "The timestamp provided for seed generation does not match the timestamp in the snapshot payload."
    },
    {
      "code": 6011,
      "name": "SliceError",
      "msg": "Could not slice the account data correctly."
    },
    {
      "code": 6012,
      "name": "InvalidOwner",
      "msg": "Invalid account owner."
    },
    {
      "code": 6013,
      "name": "InvalidTimeSlot",
      "msg": "Invalid time slot, must be aligned on a 5-min boundary."
    },
    {
      "code": 6014,
      "name": "StakeStillLocked",
      "msg": "Stake is still locked and cannot be withdrawn yet."
    },
    {
      "code": 6015,
      "name": "InvalidRecipient",
      "msg": "Invalid recipient of the financial transaction."
    },
    {
      "code": 6016,
      "name": "ActiveSubscription",
      "msg": "You already have an active subscription."
    },
    {
      "code": 6017,
      "name": "Unauthorized",
      "msg": "Unauthorized account updater."
    },
    {
      "code": 6018,
      "name": "InvalidAccountOwner",
      "msg": "Invalid account owner."
    },
    {
      "code": 6019,
      "name": "InvalidMintAuthority",
      "msg": "Invalid mint authority."
    },
    {
      "code": 6020,
      "name": "InvalidMint",
      "msg": "Invalid mint."
    },
    {
      "code": 6021,
      "name": "PredicateFailed",
      "msg": "Predicate failed."
    },
    {
      "code": 6022,
      "name": "InvalidFixtureSubTreeProof",
      "msg": "Invalid sub-tree proof for fixture"
    },
    {
      "code": 6023,
      "name": "InvalidStatProof",
      "msg": "Invalid stats proof for event"
    },
    {
      "code": 6024,
      "name": "InvalidStatCombination",
      "msg": "invalid stat combination"
    },
    {
      "code": 6025,
      "name": "MissingSecondStat",
      "msg": "Missing second stat"
    },
    {
      "code": 6026,
      "name": "UnexpectedSecondStat",
      "msg": "Unexpected second stat"
    },
    {
      "code": 6027,
      "name": "Overflow",
      "msg": "Overflow"
    },
    {
      "code": 6028,
      "name": "TradeNotActive",
      "msg": "Trade not active"
    },
    {
      "code": 6029,
      "name": "InvalidTrader",
      "msg": "Invalid trader"
    },
    {
      "code": 6030,
      "name": "WinnerMismatch",
      "msg": "Winner mismatch"
    },
    {
      "code": 6031,
      "name": "TradeTermsMismatch",
      "msg": "Trade terms mismatch"
    },
    {
      "code": 6032,
      "name": "UnauthorizedSettler",
      "msg": "Unauthorized settler"
    }
  ],
  "types": [
    {
      "name": "BatchMetadata",
      "type": {
        "kind": "struct",
        "fields": [
          {
            "name": "total_update_count",
            "type": "i32"
          },
          {
            "name": "num_unique_fixtures",
            "type": "i32"
          },
          {
            "name": "overall_batch_start_ts",
            "type": "i64"
          },
          {
            "name": "overall_batch_end_ts",
            "type": "i64"
          }
        ]
      }
    },
    {
      "name": "BinaryExpression",
      "type": {
        "kind": "enum",
        "variants": [
          {
            "name": "Add"
          },
          {
            "name": "Subtract"
          }
        ]
      }
    },
    {
      "name": "Comparison",
      "type": {
        "kind": "enum",
        "variants": [
          {
            "name": "GreaterThan"
          },
          {
            "name": "LessThan"
          },
          {
            "name": "EqualTo"
          }
        ]
      }
    },
    {
      "name": "Fixture",
      "type": {
        "kind": "struct",
        "fields": [
          {
            "name": "ts",
            "type": "i64"
          },
          {
            "name": "start_time",
            "type": "i64"
          },
          {
            "name": "competition",
            "type": "string"
          },
          {
            "name": "competition_id",
            "type": "i32"
          },
          {
            "name": "fixture_group_id",
            "type": "i32"
          },
          {
            "name": "participant1_id",
            "type": "i32"
          },
          {
            "name": "participant1",
            "type": "string"
          },
          {
            "name": "participant2_id",
            "type": "i32"
          },
          {
            "name": "participant2",
            "type": "string"
          },
          {
            "name": "fixture_id",
            "type": "i64"
          },
          {
            "name": "participant1_is_home",
            "type": "bool"
          }
        ]
      }
    },
    {
      "name": "FixtureBatchSummary",
      "type": {
        "kind": "struct",
        "fields": [
          {
            "name": "fixture_id",
            "type": "i64"
          },
          {
            "name": "competition_id",
            "type": "i32"
          },
          {
            "name": "competition",
            "type": "string"
          },
          {
            "name": "update_stats",
            "type": {
              "defined": {
                "name": "FixtureUpdateStats"
              }
            }
          },
          {
            "name": "update_sub_tree_root",
            "type": {
              "array": [
                "u8",
                32
              ]
            }
          }
        ]
      }
    },
    {
      "name": "FixtureUpdateStats",
      "type": {
        "kind": "struct",
        "fields": [
          {
            "name": "update_count",
            "type": "u32"
          },
          {
            "name": "min_timestamp",
            "type": "i64"
          },
          {
            "name": "max_timestamp",
            "type": "i64"
          }
        ]
      }
    },
    {
      "name": "Odds",
      "type": {
        "kind": "struct",
        "fields": [
          {
            "name": "fixture_id",
            "type": "i64"
          },
          {
            "name": "message_id",
            "type": "string"
          },
          {
            "name": "ts",
            "type": "i64"
          },
          {
            "name": "bookmaker",
            "type": "string"
          },
          {
            "name": "bookmaker_id",
            "type": "i32"
          },
          {
            "name": "super_odds_type",
            "type": "string"
          },
          {
            "name": "game_state",
            "type": {
              "option": "string"
            }
          },
          {
            "name": "in_running",
            "type": "bool"
          },
          {
            "name": "market_parameters",
            "type": {
              "option": "string"
            }
          },
          {
            "name": "market_period",
            "type": {
              "option": "string"
            }
          },
          {
            "name": "price_names",
            "type": {
              "vec": "string"
            }
          },
          {
            "name": "prices",
            "type": {
              "vec": "i32"
            }
          }
        ]
      }
    },
    {
      "name": "OddsBatchSummary",
      "type": {
        "kind": "struct",
        "fields": [
          {
            "name": "fixture_id",
            "type": "i64"
          },
          {
            "name": "update_stats",
            "type": {
              "defined": {
                "name": "OddsUpdateStats"
              }
            }
          },
          {
            "name": "odds_sub_tree_root",
            "type": {
              "array": [
                "u8",
                32
              ]
            }
          }
        ]
      }
    },
    {
      "name": "OddsUpdateStats",
      "type": {
        "kind": "struct",
        "fields": [
          {
            "name": "update_count",
            "type": "u32"
          },
          {
            "name": "min_timestamp",
            "type": "i64"
          },
          {
            "name": "max_timestamp",
            "type": "i64"
          }
        ]
      }
    },
    {
      "name": "OracleState",
      "type": {
        "kind": "struct",
        "fields": [
          {
            "name": "authority",
            "type": "pubkey"
          },
          {
            "name": "token_mint",
            "type": "pubkey"
          },
          {
            "name": "bump",
            "type": "u8"
          }
        ]
      }
    },
    {
      "name": "ProofNode",
      "type": {
        "kind": "struct",
        "fields": [
          {
            "name": "hash",
            "type": {
              "array": [
                "u8",
                32
              ]
            }
          },
          {
            "name": "is_right_sibling",
            "type": "bool"
          }
        ]
      }
    },
    {
      "name": "ScoreStat",
      "docs": [
        "The on-chain representation of a single, provable key-value statistic.",
        "This is the leaf of the inner-most Merkle tree."
      ],
      "type": {
        "kind": "struct",
        "fields": [
          {
            "name": "key",
            "type": "u32"
          },
          {
            "name": "value",
            "type": "i32"
          },
          {
            "name": "period",
            "type": "i32"
          }
        ]
      }
    },
    {
      "name": "ScoresBatchSummary",
      "docs": [
        "The summary for a single fixture's scores events within a 5-minute batch.",
        "This contains the root of the sub-tree of all events for that fixture."
      ],
      "type": {
        "kind": "struct",
        "fields": [
          {
            "name": "fixture_id",
            "type": "i64"
          },
          {
            "name": "update_stats",
            "type": {
              "defined": {
                "name": "ScoresUpdateStats"
              }
            }
          },
          {
            "name": "events_sub_tree_root",
            "type": {
              "array": [
                "u8",
                32
              ]
            }
          }
        ]
      }
    },
    {
      "name": "ScoresUpdateStats",
      "type": {
        "kind": "struct",
        "fields": [
          {
            "name": "update_count",
            "type": "i32"
          },
          {
            "name": "min_timestamp",
            "type": "i64"
          },
          {
            "name": "max_timestamp",
            "type": "i64"
          }
        ]
      }
    },
    {
      "name": "StakeAccount",
      "type": {
        "kind": "struct",
        "fields": [
          {
            "name": "authority",
            "type": "pubkey"
          },
          {
            "name": "unlock_ts",
            "type": "i64"
          }
        ]
      }
    },
    {
      "name": "StatTerm",
      "type": {
        "kind": "struct",
        "fields": [
          {
            "name": "stat_to_prove",
            "type": {
              "defined": {
                "name": "ScoreStat"
              }
            }
          },
          {
            "name": "event_stat_root",
            "type": {
              "array": [
                "u8",
                32
              ]
            }
          },
          {
            "name": "stat_proof",
            "type": {
              "vec": {
                "defined": {
                  "name": "ProofNode"
                }
              }
            }
          }
        ]
      }
    },
    {
      "name": "TradeEscrow",
      "type": {
        "kind": "struct",
        "fields": [
          {
            "name": "trade_id",
            "type": "u64"
          },
          {
            "name": "trader_a",
            "type": "pubkey"
          },
          {
            "name": "trader_b",
            "type": "pubkey"
          },
          {
            "name": "stake_a",
            "type": "u64"
          },
          {
            "name": "stake_b",
            "type": "u64"
          },
          {
            "name": "trade_terms_hash",
            "type": {
              "array": [
                "u8",
                32
              ]
            }
          },
          {
            "name": "state",
            "type": {
              "defined": {
                "name": "TradeState"
              }
            }
          },
          {
            "name": "bump",
            "type": "u8"
          }
        ]
      }
    },
    {
      "name": "TradeState",
      "type": {
        "kind": "enum",
        "variants": [
          {
            "name": "Active"
          },
          {
            "name": "Resolved"
          },
          {
            "name": "Disputed"
          }
        ]
      }
    },
    {
      "name": "TraderPredicate",
      "type": {
        "kind": "struct",
        "fields": [
          {
            "name": "threshold",
            "type": "i32"
          },
          {
            "name": "comparison",
            "type": {
              "defined": {
                "name": "Comparison"
              }
            }
          }
        ]
      }
    }
  ]
}